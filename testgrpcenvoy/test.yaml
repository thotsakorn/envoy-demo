admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  listeners:
    - name: "service-a-svc-http-listener"
      address:
        socket_address: { address: 0.0.0.0, port_value: 8082 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: auto
                stat_prefix: ingress_http
                route_config:
                  name: service-a-svc-http-route
                  virtual_hosts:
                    - name: service-a-svc-http-route
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/" }
                          route:
                            cluster: echo_service
                            timeout: 2s
                            max_stream_duration:
                              grpc_timeout_header_max: 2s
                      cors:
                        allow_origin_string_match:
                          - prefix: "*"
                        # allow_methods: GET, PUT, DELETE, POST, OPTIONS
                        # allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                        # max_age: "1728000"
                        # expose_headers: custom-header-1,grpc-status,grpc-message  
                          # request_headers_to_add:
                          # - header:
                          #     key: x-custom-to-backend
                          #     value: value-for-backend-from-envoy
                          # typed_per_filter_config:
                          #   envoy.filters.http.ext_authz:
                          #     "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          #     check_settings:
                          #       context_extensions:
                          #         x-forwarded-host: original-host-as-context
                http_filters:
                  - name: envoy.filters.http.grpc_web
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                  - name: envoy.filters.http.cors
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                  # - name: envoy.filters.http.jwt_authn
                  #   typed_config:
                  #     "@type": "type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication"
                  #     providers:
                  #       jwt_auth:
                  #         local_jwks:
                  #           inline_string: '{"keys":[{"typ": "JWT", "kty":"oct","alg":"HS256","k":"b2N0"}]}'
                  #         from_headers:
                  #         - name: Authorization
                  #           value_prefix: "Bearer "
                  #         payload_in_metadata: jwt_payload
                  #     rules:
                  #     - match:
                  #         prefix: "/"
                  #       requires:
                  #         provider_name: jwt_auth
                  # - name: envoy.filters.http.ext_authz
                  #   typed_config:
                  #     "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                  #     transport_api_version: V3
                  #     grpc_service:
                  #       envoy_grpc:
                  #         cluster_name: ext-authz
                  # - name: envoy.filters.http.rbac 
                  #   typed_config:
                  #     "@type": type.googleapis.com/envoy.extensions.filters.http.rbac.v3.RBAC       
                  #     rules: 
                  #       action: ALLOW
                  #       policies:
                  #         "allow-sub-match-rule":
                  #           permissions:
                  #           - and_rules:
                  #               rules:
                  #               - header: { name: ":method", exact_match: "GET" }
                  #               - header: { name: "User", exact_match: "sal" }
                  #               - url_path:
                  #                   path: { prefix: "/" }
                  #           principals:                 
                  #           - metadata:
                  #               filter: envoy.filters.http.jwt_authn
                  #               path:
                  #                 - key: my_payload
                  #                 - key: sub
                  #               value:
                  #                 string_match:
                  #                   exact:  "testing@secure.istio.io" 
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router  

    - name: "service-b-svc-http-listener"
      address:
        socket_address: { address: 0.0.0.0, port_value: 8083 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: auto
                stat_prefix: ingress_http
                route_config:
                  name: service-b-svc-http-route
                  virtual_hosts:
                    - name: service-b-svc-http-route
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/" }
                          route:
                            cluster: grpc2
                            timeout: 2s
                            prefix_rewrite: "/"
                            max_stream_duration:
                              grpc_timeout_header_max: 2s
                http_filters:
                  - name: envoy.filters.http.grpc_web
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                  - name: envoy.filters.http.cors
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router  

  clusters:
    - name: echo_service
      connect_timeout: 2s
      type: logical_dns
      http2_protocol_options: {}
      lb_policy: round_robin
      load_assignment:
        cluster_name: echo_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: host.docker.internal
                      port_value: 50004

    - name: ext-authz
      type: static
      http2_protocol_options: {}
      load_assignment:
        cluster_name: ext-authz
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: 127.0.0.1
                  port_value: 50051
      # common_lb_config:
      #   healthy_panic_threshold:
      #     value: 50.0   
      # # health_checks:
      # #   - timeout: 1s
      # #     interval: 5s
      # #     interval_jitter: 1s
      # #     no_traffic_interval: 5s
      # #     unhealthy_threshold: 1
      # #     healthy_threshold: 3
      # #     grpc_health_check:
      # #       service_name: "envoy.service.auth.v3.Authorization"
      # #       authority: "server.domain.com"

      # # connect_timeout: 0.25s

    - name: grpc2
      connect_timeout: 2s
      type: logical_dns
      http2_protocol_options: {}
      lb_policy: round_robin
      load_assignment:
        cluster_name: grpc2
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: host.docker.internal
                      port_value: 50052
    # - name: grpc2
    #   connect_timeout: 60s
    #   type: logical_dns
    #   lb_policy: ROUND_ROBIN
    #   typed_extension_protocol_options:
    #     envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
    #       "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
    #       explicit_http_config:
    #         http2_protocol_options: {}
    #   load_assignment:
    #     cluster_name: grpc2
    #     endpoints:
    #       - lb_endpoints:
    #           - endpoint:
    #               address:
    #                 socket_address:
    #                   address: host.docker.internal
    #                   port_value: 50052      
                      